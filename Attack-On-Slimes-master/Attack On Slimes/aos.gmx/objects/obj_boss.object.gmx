<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize boss
damage = 1;
hp = 3000
maxhp = hp;
knockback = 7;
hspd = 0.3
vspd = 0.3
range = 20;
depth = -y;
hspd = 0.3
vspd = 0.3
shotcount = 1;
stepchecker =0;
phase2check = 0;
image_speed = .1;
spd = .25;
/// phase 1 modes
p1_mode = irandom_range(1,3);
state = scr_choose_next_mode;
alarm[0] = room_speed*6;
audio_stop_all();
audio_play_sound(sound_gameplay,8,true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// phase 2 mode 3
if (instance_exists(obj_player2)){
        var dir = point_direction(x,y,x,y+1);
          
        var ldx1 = lengthdir_x(5,dir +((shotcount-1)*5));
        var ldy1 = lengthdir_y(5,dir +((shotcount-1)*5));
        var bullet1 = instance_create(x,y,obj_orange_prj_boss);
        bullet1.phy_rotation = 0 - ((shotcount-1)*5);
        
        var ldx2 = lengthdir_x(5,dir + 45 + ((shotcount-1)*5));
        var ldy2 = lengthdir_y(5,dir + 45 + ((shotcount-1)*5));
        var bullet2 = instance_create(x,y,obj_orange_prj_boss);
        bullet2.phy_rotation = -45 - ((shotcount-1)*5);
        
        var ldx3 = lengthdir_x(5,dir + 90 +((shotcount-1)*5));
        var ldy3 = lengthdir_y(5,dir + 90 +((shotcount-1)*5));
        var bullet3 = instance_create(x,y,obj_orange_prj_boss);
        bullet3.phy_rotation = -90 - ((shotcount-1)*5);
        
        var ldx4 = lengthdir_x(5,dir + 135 +((shotcount-1)*5));
        var ldy4 = lengthdir_y(5,dir + 135 +((shotcount-1)*5));
        var bullet4 = instance_create(x,y,obj_orange_prj_boss);
        bullet4.phy_rotation = -135 - ((shotcount-1)*5);
        
        var ldx5 = lengthdir_x(5,dir + 180 +((shotcount-1)*5));
        var ldy5 = lengthdir_y(5,dir + 180 +((shotcount-1)*5));
        var bullet5 = instance_create(x,y,obj_orange_prj_boss);
        bullet5.phy_rotation = -180 - ((shotcount-1)*5);
        
        var ldx6 = lengthdir_x(5,dir + 225 +((shotcount-1)*5));
        var ldy6 = lengthdir_y(5,dir + 225 +((shotcount-1)*5));
        var bullet6 = instance_create(x,y,obj_orange_prj_boss);
        bullet6.phy_rotation = -225 - ((shotcount-1)*5);
        
        var ldx7 = lengthdir_x(5,dir + 270 +((shotcount-1)*5));
        var ldy7 = lengthdir_y(5,dir + 270 +((shotcount-1)*5));
        var bullet7 = instance_create(x,y,obj_orange_prj_boss);
        bullet7.phy_rotation = -270 - ((shotcount-1)*5);
        
        var ldx8 = lengthdir_x(5,dir + 315 +((shotcount-1)*5));
        var ldy8 = lengthdir_y(5,dir + 315 +((shotcount-1)*5));
        var bullet8 = instance_create(x,y,obj_orange_prj_boss);
        bullet8.phy_rotation = -315 - ((shotcount-1)*5);
        
        bullet1.creator = id;
        with (bullet1){
            physics_apply_impulse(x,y,ldx1,ldy1);
        }
        
        bullet2.creator = id;
        with (bullet2){
            physics_apply_impulse(x,y,ldx2,ldy2);
        }
        
        bullet3.creator = id;
        with (bullet3){
            physics_apply_impulse(x,y,ldx3,ldy3);
        }
        
        bullet4.creator = id;
        with (bullet4){
            physics_apply_impulse(x,y,ldx4,ldy4);
        }
        
        bullet5.creator = id;
        with (bullet5){
            physics_apply_impulse(x,y,ldx5,ldy5);
        }
        
        bullet6.creator = id;
        with (bullet6){
            physics_apply_impulse(x,y,ldx6,ldy6);
        }
        
        bullet7.creator = id;
        with (bullet7){
            physics_apply_impulse(x,y,ldx7,ldy7);
        }
        
        bullet8.creator = id;
        with (bullet8){
            physics_apply_impulse(x,y,ldx8,ldy8);
        }
        
        if (shotcount == 18)
        {
            shotcount =1;
            alarm[4] = room_speed*0.1;
        }
        else{
        shotcount +=1;
        alarm[4] = room_speed*0.1;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// phase 2 mode 2
if (instance_exists(obj_player2)){
        var dir = point_direction(x,y,x+1,y);
          
        var ldx1 = lengthdir_x(2,dir +((shotcount-1)*22.5));
        var ldy1 = lengthdir_y(2,dir +((shotcount-1)*22.5));
        var bullet1 = instance_create(x,y,obj_red_projectile);
        bullet1.phy_rotation =  0 - ((shotcount-1)*22.5);
        
        var ldx2 = lengthdir_x(2,dir + 45 +((shotcount-1)*22.5));
        var ldy2 = lengthdir_y(2,dir + 45 +((shotcount-1)*22.5));
        var bullet2 = instance_create(x,y,obj_red_projectile);
        bullet2.phy_rotation = -45 - ((shotcount-1)*22.5);
        
        var ldx3 = lengthdir_x(2,dir + 90 +((shotcount-1)*22.5));
        var ldy3 = lengthdir_y(2,dir + 90 +((shotcount-1)*22.5));
        var bullet3 = instance_create(x,y,obj_red_projectile);
        bullet3.phy_rotation = -90 - ((shotcount-1)*22.5);
        
        var ldx4 = lengthdir_x(2,dir + 135 +((shotcount-1)*22.5));
        var ldy4 = lengthdir_y(2,dir + 135 +((shotcount-1)*22.5));
        var bullet4 = instance_create(x,y,obj_red_projectile);
        bullet4.phy_rotation = -135 - ((shotcount-1)*22.5);
        
        var ldx5 = lengthdir_x(2,dir + 180 +((shotcount-1)*22.5));
        var ldy5 = lengthdir_y(2,dir + 180 +((shotcount-1)*22.5));
        var bullet5 = instance_create(x,y,obj_red_projectile);
        bullet5.phy_rotation = -180 - ((shotcount-1)*22.5);
        
        var ldx6 = lengthdir_x(2,dir + 225 +((shotcount-1)*22.5));
        var ldy6 = lengthdir_y(2,dir + 225 +((shotcount-1)*22.5));
        var bullet6 = instance_create(x,y,obj_red_projectile);
        bullet6.phy_rotation = -225 - ((shotcount-1)*22.5);
        
        var ldx7 = lengthdir_x(2,dir + 270 +((shotcount-1)*22.5));
        var ldy7 = lengthdir_y(2,dir + 270 +((shotcount-1)*22.5));
        var bullet7 = instance_create(x,y,obj_red_projectile);
        bullet7.phy_rotation = -270 - ((shotcount-1)*22.5);
        
        var ldx8 = lengthdir_x(2,dir + 315 +((shotcount-1)*22.5));
        var ldy8 = lengthdir_y(2,dir + 315 +((shotcount-1)*22.5));
        var bullet8 = instance_create(x,y,obj_red_projectile);
        bullet8.phy_rotation = -315 - ((shotcount-1)*22.5);
        
        bullet1.creator = id;
        with (bullet1){
            physics_apply_impulse(x,y,ldx1,ldy1);
        }
        
        bullet2.creator = id;
        with (bullet2){
            physics_apply_impulse(x,y,ldx2,ldy2);
        }
        
        bullet3.creator = id;
        with (bullet3){
            physics_apply_impulse(x,y,ldx3,ldy3);
        }
        
        bullet4.creator = id;
        with (bullet4){
            physics_apply_impulse(x,y,ldx4,ldy4);
        }
        
        bullet5.creator = id;
        with (bullet5){
            physics_apply_impulse(x,y,ldx5,ldy5);
        }
        
        bullet6.creator = id;
        with (bullet6){
            physics_apply_impulse(x,y,ldx6,ldy6);
        }
        
        bullet7.creator = id;
        with (bullet7){
            physics_apply_impulse(x,y,ldx7,ldy7);
        }
        
        bullet8.creator = id;
        with (bullet8){
            physics_apply_impulse(x,y,ldx8,ldy8);
        }
        
        if (shotcount ==2)
        {
            shotcount =1;
            alarm[3] = room_speed * 0.4;
        }
        else{
        shotcount +=1;
        alarm[3] = room_speed * 0.4;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// phase 1 mode 3
if (instance_exists(obj_player2)){
        var dir = point_direction(x,y,x,y+1);
        
        var ldx1 = lengthdir_x(3,dir +((shotcount-1)*30));
        var ldy1 = lengthdir_y(3,dir +((shotcount-1)*30));
        var bullet1 = instance_create(x,y,obj_orange_projectile);
        bullet1.phy_rotation = 180 - ((shotcount-1)*30);
        
        var ldx2 = lengthdir_x(3,dir + 180 +((shotcount-1)*30));
        var ldy2 = lengthdir_y(3,dir + 180+ ((shotcount-1)*30));
        var bullet2 = instance_create(x,y,obj_orange_projectile);       
        bullet2.phy_rotation = 0 - ((shotcount-1)*30);
        
        bullet1.creator = id;
        with (bullet1){
            physics_apply_impulse(x,y,ldx1,ldy1);
        }
        
        bullet2.creator = id;
        with (bullet2){
            physics_apply_impulse(x,y,ldx2,ldy2);
        }
        
        if (shotcount ==6)
        {
            shotcount =1;
            alarm[2] = room_speed*0.2;
        }
        else{
        shotcount +=1;
        alarm[2] = room_speed*0.2;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// alarm for general bullet
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// select next state alarm
state = scr_choose_next_mode;
alarm[0] = room_speed*6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase2check == 0 &amp;&amp; hp == 1500){
    state = scr_choose_next_mode;
    phase2check = 1;
}

if (hp &gt; 0){
    script_execute(state);
}

else if (hp &lt;= 0){
    instance_destroy();
    with(obj_player2)
    {instance_destroy();}
    with(obj_player_stats){
    instance_destroy();}
    with(obj_cursor)
    {instance_destroy();}  
    room_goto(rm_win)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>healthbar = (hp/maxhp)*100;
draw_healthbar(64,704,1216,768,healthbar,c_black,c_red,c_green,0,true,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,5</point>
    <point>40,5</point>
    <point>40,42.75</point>
    <point>8,42.75</point>
  </PhysicsShapePoints>
</object>
