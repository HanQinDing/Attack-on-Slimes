<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_missile_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize slime
event_inherited();
sight = 1000;
damage = 1;
knockback = 7;
hspd = 0.3
vspd = 0.3
count = 0;
range = 20;
var i;
i = 9;
repeat(10)
   {
   bullets[i] = 0;
   i -= 1;
   }
 arraycount=0;
///scr_enemy_shoot();
spd = .25;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_health);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> var xp = 0;
var yp = 0;
if (sprite_index == spr_missile_left)
{
    xp = x-8;
    yp = y-13;
}
if (sprite_index == spr_missile_right)
{
    xp = x+8;
    yp = y-13
}
if (sprite_index == spr_missile_up)
{
    xp = x;
    yp = y-21
}
if (sprite_index == spr_missile_down)
{
    xp = x;
    yp = y-7;
}
if (sprite_index == spr_missile_leftup)
{
    xp = x-10;
    yp = y-19;
}
if (sprite_index == spr_missile_leftdown)
{
    xp = x-8;
    yp = y-8;
}
if (sprite_index == spr_missile_rightup)
{
    xp = x+10;
    yp = y-19
}
if (sprite_index == spr_missile_rightdown)
{
    xp = x+8;
    yp = y-8;
}
 if (instance_exists(obj_player2))
 { 
    
  var bullet = instance_create(xp,yp,obj_purple_projectile_homing);
  with (bullet)
  {
     Ins_ID = id;
  }
  count =1;
  var distance = point_distance(x,y,obj_player2.x,obj_player2.y);
  
    if (distance &gt; sight){
  
        alarm[2] = -1;   
        count =0;  
        }
        else{
        alarm[2] = room_speed;
        }
 }
 
 
     
        

   

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_player2))
{
    var distance = point_distance(x,y,obj_player2.x,obj_player2.y);
    if (distance &lt;= sight and count ==0){
  
        alarm[2] = 1;     
        }           
}
if (hp &lt;= 0){
    instance_destroy();
}

var pdir = round(point_direction(x, y, obj_player2.x, obj_player2.y)/45);

    
    switch(pdir){
    case 0:
        sprite_index = spr_missile_right;        
        break;
    
    case 1:
        sprite_index = spr_missile_rightup;
        break;
        
    case 2:     
        sprite_index = spr_missile_up;
        break; 
        
    case 3:
        sprite_index = spr_missile_leftup;
        break;
    
    case 4:
        sprite_index = spr_missile_left;
        break;   
        
    case 5:
        sprite_index = spr_missile_leftdown;
        break;     
        
    case 6:
        sprite_index = spr_missile_down;
        break;  
        
    case 7:
        sprite_index = spr_missile_rightdown;
        break;    
        
    case 8:
        sprite_index = spr_missile_right;
        break;      
    
    }  
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>5.25,6.25</point>
    <point>18.5,6.25</point>
    <point>18.5,42.25</point>
    <point>5.25,42.25</point>
  </PhysicsShapePoints>
</object>
